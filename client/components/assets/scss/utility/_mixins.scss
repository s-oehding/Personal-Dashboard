@mixin antialiasing($value: subpixel) {
    @if $value == subpixel {
        -webkit-font-smoothing: subpixel-antialiased;
    }
    @if $value == pixel {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
}

@mixin background-icon($url) {
    height: 100%;

    background-image: url($url);
    background-position: center;
    background-repeat: no-repeat;
    background-size: #{(100/setting($grid, cols) - 15)}vw;
    opacity: .2;
}

@mixin background-pattern($url) {
    height: 100%;

    background-image: url($url);
    background-position: center;
    background-repeat: repeat;
    background-size: #{(100/setting($grid, cols) - 15)}vw;
    opacity: .2;
}

@mixin icon($url) {
    content: '';

    display: inline-block;
    width: 1em;
    height: 1em;
    vertical-align: middle;

    background-image: url($url);
    background-position: center;
    background-repeat: no-repeat;
    background-size: 1em;
}

@mixin clearfix {
    zoom: 1;

    &:before,
    &:after {
        content: '';

        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin tile-color($color) {
    background-color: $color;

    &:after {
        @include gradient-vertical(rgba($color,0), rgba($color, 1));
    }
}

@mixin ellipsis {
    overflow: hidden;

    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin gradient-vertical($start, $stop, $from: 0, $to: 100%) {
    background: -webkit-linear-gradient(top, $start $from,$stop $to);
    background:         linear-gradient(to bottom, $start $from, $stop $to);
}

@mixin position-center-horizontal($position: absolute) {
    position: $position;
    left: 50%;

    transform: translateX(-50%);
}


@mixin position-center-vertical($position: absolute) {
    position: $position;
    top: 50%;

    transform: translateY(-50%);
}


@mixin position-center($position: absolute) {
    position: $position;
    top: 50%;
    left: 50%;

    transform: translateX(-50%) translateY(-50%);
}

@mixin transition($property, $duration, $type) {
    -moz-transition:    $property $duration $type;
    -o-transition:      $property $duration $type;
    -webkit-transition: $property $duration $type;
    transition:         $property $duration $type;
}

@mixin box-shadow ($level) {
    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    } @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
}

@mixin dropShadow($offsetX: 2, $offsetY: 2, $blur: 2, $rgba: rgba(0, 0, 0, 0.3), $hex: #B2B2B2) {
  -webkit-filter: drop-shadow(#{$offsetX}px #{$offsetY}px #{$blur}px $rgba);
  -ms-filter    : "progid:DXImageTransform.Microsoft.Dropshadow(offsetX=" + $offsetX + ", offsetY=" + $offsetY + ", Color='" + $hex + "')";
  filter        : "progid:DXImageTransform.Microsoft.Dropshadow(offsetX=" + $offsetX + ", offsetY=" + $offsetY + ", Color='" + $hex + "')";
}

@mixin mod($name) {
    &--#{$name} {
        @content ;
    }
}
